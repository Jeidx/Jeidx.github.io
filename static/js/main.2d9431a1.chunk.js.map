{"version":3,"sources":["components/Header.module.css","components/Section.module.css","features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","isOpen","setIsOpen","useSelector","Container","src","Menu","map","index","to","smooth","duration","RightMenu","className","s","wrp","onClick","MenuIcona","MenuIcon","BurgerNav","show","styled","div","props","Section","title","description","backgroundImg","leftBtnTex","rightBtnText","img","id","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","wrpArrow","Home","App","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d9431a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrp\":\"Header_wrp__3JB95\",\"MenuIcon\":\"Header_MenuIcon__2oTOE\",\"MenuIcona\":\"Header_MenuIcona__EqNTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrpArrow\":\"Section_wrpArrow__nUu2P\",\"animateDown\":\"Section_animateDown__3NMK9\"};","import { createSlice } from\"@reduxjs/toolkit\"\r\n\r\n\r\nconst initialState = {\r\n    cars:[\"Model S\",\"Model Y\",\"Model 3\",\"Model X\"]\r\n}\r\n\r\nconst carSlice = createSlice({\r\n    name: \"car\",\r\n    initialState,\r\n    reducers:{}\r\n})\r\n\r\nexport const selectCars = state => state.car.cars\r\n\r\nexport default carSlice.reducer","import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport s from './Header.module.css';\r\nimport { selectCars } from \"../features/car/carSlice\";\r\nimport { useSelector } from 'react-redux'\r\nimport * as Scroll from 'react-scroll';\r\nimport { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\n\r\nfunction Header() {\r\n\r\n    const [isOpen, setIsOpen]= useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const cars = useSelector(selectCars)\r\n    return (\r\n        <Container>\r\n            <a>\r\n                <img src=\"/images/logo.svg\"/>\r\n            </a>\r\n            <Menu>\r\n                {cars && cars.map((car,index)=>\r\n                    <Link key={index} to={index+1} smooth={true} duration={1000}>{car}</Link>\r\n                )}\r\n\r\n            </Menu>\r\n            <RightMenu>\r\n                <Link  to={\"7\"} smooth={true} duration={1500}>Shop</Link>\r\n                <Link>Tesla Account</Link>\r\n                \r\n                <div className={s.wrp} onClick={toggle}>\r\n                    <span className={isOpen ? s.MenuIcona : s.MenuIcon}></span>\r\n                </div>\r\n            </RightMenu>\r\n            <BurgerNav show={isOpen}>\r\n            {cars && cars.map((car,index)=>\r\n                     <Link key={index} to={index+1} smooth={true} duration={1000}>{car}</Link>\r\n                )}\r\n                <li><a>Existing Inventory</a></li>\r\n                <li><a>Used Inventory</a></li>\r\n                <li><a>Trade-in</a></li>\r\n                <li><a>Cybertruck</a></li>\r\n                <li><a>Roadster</a></li>\r\n            </BurgerNav>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Container = styled.div`\r\n    min-height:60px;\r\n    position:fixed;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n    padding:0 20px;\r\n    top:0;\r\n    left:0;\r\n    right:0;\r\n    z-index:1;\r\n`\r\nconst Menu = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    flex:1;\r\n    a{\r\n        font-weight:600;\r\n        text-transform:uppercase;\r\n        padding:0 10px;\r\n        flex-wrap:nowrap;\r\n        transition:.2s;\r\n    }\r\n    a:hover{\r\n        cursor:pointer;\r\n        color:yellow;\r\n\r\n    }\r\n    @media(max-width: 768px){\r\n        display:none;\r\n    }\r\n`\r\nconst RightMenu = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    margin-right:10px;\r\n    transition:.2s;\r\n}\r\na:hover{\r\n    cursor:pointer;\r\n    color:yellow;\r\n}\r\n`\r\n\r\nconst BurgerNav = styled.div`\r\n    position:fixed;\r\n    top:0;\r\n    bottom:0;\r\n    right:0;\r\n    background:white;\r\n    width:300px;\r\n    z-index:16;\r\n    list-style:none;\r\n    padding:20px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    text-align:start;\r\n    transform: ${props => props.show ? 'translateX(0)':'translateX(100%)'};\r\n    transition:all .3s;\r\n    li,a{\r\n        padding:15px 0 ;\r\n        border-bottom:1px solid rgba(0,0,0,.2);\r\n        font-weight:600;\r\n        transition:.2s;\r\n\r\n    }\r\n    a:hover{\r\n        cursor:pointer;\r\n        color:rgba(0,0,0,.5);\r\n    }\r\n\r\n`      \r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Fade from 'react-reveal/Fade';\r\nimport s from './Section.module.css';\r\nimport * as Scroll from 'react-scroll';\r\nimport { Link, Button, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\nfunction Section({title,description,backgroundImg,leftBtnTex,rightBtnText,img,id}) {\r\n    return (\r\n        <Wrap id={id} bgImage={backgroundImg}>\r\n            <Fade bottom>\r\n                <ItemText>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </ItemText>\r\n            </Fade>\r\n            <Buttons>\r\n                <Fade bottom>\r\n                    <ButtonGroup>\r\n                        <LeftButton>\r\n                            {leftBtnTex}\r\n                        </LeftButton>\r\n                        { rightBtnText &&\r\n                            <RightButton>\r\n                                {rightBtnText}\r\n                            </RightButton>\r\n                        }\r\n                    </ButtonGroup>\r\n                </Fade>\r\n                <div className={s.wrpArrow}>\r\n                    <Link to={++id} smooth={true} duration={1000}><img src={img}></img></Link>\r\n                </div>\r\n                \r\n            </Buttons>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nconst Wrap = styled.div`\r\n    z-index:10;\r\n    width:100vw;\r\n    height:100vh;\r\n    background-size:cover;\r\n    background-position:center;\r\n    backgrond-repeat:no-repeat;\r\n    background-image:url('/images/model-s.jpg');\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    background-image:${props => `url(\"/images/${props.bgImage}\")`}\r\n`\r\nconst ItemText = styled.div`\r\n    padding-top:15vh;\r\n    text-align:center;\r\n`\r\nconst ButtonGroup = styled.div`\r\n    display:flex;\r\n    margin-bottom:30px;\r\n    @media(max-width:768px){\r\n        flex-direction:column;\r\n    }\r\n`\r\nconst LeftButton = styled.div`\r\n    background-color:rgba(23,26,32,.8);\r\n    height:40px;\r\n    width:256px;\r\n    color:white;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    border-radius:100px;\r\n    opacity: .85;\r\n    text-transform:uppercase;\r\n    font-size:12px;\r\n    cursor:pointer;\r\n    margin:8px;\r\n`\r\nconst RightButton = styled(LeftButton)`\r\n    background-color:#fff;\r\n    opacity: .65;\r\n    color:#000;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n\r\n`\r\n","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport Section from './Section';\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Section\r\n                title=\"Model S\"\r\n                description=\"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-s.jpg\"\r\n                leftBtnTex=\"Custom order\"\r\n                rightBtnText=\"Existing inventory\"\r\n                img=\"/images/down-arrow.svg\"\r\n                id=\"1\"\r\n             />\r\n            <Section\r\n                title=\"Model Y\"\r\n                description=\"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-y.jpg\"\r\n                leftBtnTex=\"Custom order\"\r\n                rightBtnText=\"Existing inventory\"\r\n                img=\"/images/down-arrow.svg\"\r\n                id=\"2\"\r\n            />\r\n            <Section\r\n                title=\"Model 3\"\r\n                description=\"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-3.jpg\"\r\n                leftBtnTex=\"Custom order\"\r\n                rightBtnText=\"Existing inventory\"\r\n                img=\"/images/down-arrow.svg\"\r\n                id=\"3\"\r\n            />\r\n            <Section\r\n                title=\"Model X\"\r\n                description=\"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-x.jpg\"\r\n                leftBtnTex=\"Custom order\"\r\n                rightBtnText=\"Existing inventory\"\r\n                img=\"/images/down-arrow.svg\"\r\n                id=\"4\"\r\n            />\r\n            <Section \r\n                title=\"Lower Cost Solar Panels In America\"\r\n                description=\"Money-back guarantee\"\r\n                backgroundImg=\"solar-panel.jpg\"\r\n                leftBtnTex=\"Custom order\"\r\n                rightBtnText=\"Learn more\"\r\n                img=\"/images/down-arrow.svg\"\r\n                id=\"5\" \r\n            />\r\n            <Section \r\n                title=\"Solar for New Roofs\"\r\n                description=\"Solar Roof Costs less Than a New Roof Plus Solar Panels\"\r\n                backgroundImg=\"solar-roof.jpg\"\r\n                leftBtnTex=\"Custom order\"\r\n                rightBtnText=\"Learn more\" \r\n                img=\"/images/down-arrow.svg\"\r\n                id=\"6\"\r\n            />\r\n            <Section \r\n                title=\"Solar for New Roofs\"\r\n                backgroundImg=\"accessories.jpg\"\r\n                leftBtnTex=\"Shop now\"\r\n                id=\"7\"\r\n            />\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    z-index:10;\r\n`\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Header />\n        <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from \"../features/car/carSlice\"\n\n\nexport const store = configureStore({\n  reducer: {\n    car:carReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}